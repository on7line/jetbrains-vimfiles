nmap zso :source  /home/opass/vimfiles/rider.txt <CR>
:set rnu!
nmap z; $a;<Esc>
imap z; <Esc>$a;

nmap ,p "0p
nmap ,P "0P
imap z,p <Esc>"0pa
imap z,P <Esc>"0Pa
:nmap z, vi)
:nmap z. vi}
:nmap z) vi)
:nmap z} vi}
:nmap z> vit
:nmap c> cit
:nmap z" vi"
:nmap zcc ci"
:nmap zxx ci]
:nmap zaa ca"
:vmap <Esc> <Esc><Esc><Esc>
:imap jj <Esc>
:nmap <BS> a<BS>
:nmap zh ^
:nmap hh ^
:imap zh <Esc>^i
:nmap zl $
:nmap ll $
:imap zl <End>
":nmap zt z<CR>2k2j
:nmap hc ^C
:nmap zb ciw
:vmap zb <Esc>ciw
:imap zd <Esc>dd
" nmap j gj  " 91原版的有加，但是發現加了會影響d3j等指令，故註解
" nmap k gk
nmap qq ZQ
nmap zq :wq<CR>
:nmap <BS> a<BS>
"imap <F1> <Esc>may?[T<CR>`ap?void<CR>wzz
"nmap <F1> may?[T<CR>`ap?void<CR>wzz
imap <F1> <Esc>may?[T<CR>`ap?void<CR>wzz:action ReformatCode<CR>
nmap <F1> may?[T<CR>`ap?void<CR>wzz:action ReformatCode<CR>
imap <A-F1> <Esc>may?[F<CR>`ap?void<CR>wzz
nmap <A-F1> may?[F<CR>`ap?void<CR>wzz

imap zae Assert.AreEqual(expected,actual);<Esc>T(
nmap zae aAssert.AreEqual(expected,actual);<Esc>T(

"nmap zk :action VimBack<CR>   " 91原版的有加, 但不太清楚vimback的意圖, 改為用IDE的Navigate Back
"imap zk <Esc>:action VimBack<CR>
nmap zk :action Back<CR>
imap zk <Esc>:action Back<CR>
"nmap zj :action VimForward<CR>
"imap zj <Esc>:action VimForward<CR>
nmap zj :action Forward<CR>
imap zj <Esc>:action Forward<CR>
nmap zn :action ReSharperGotoPrevErrorInSolution<CR> " for red wave underline
nmap zgh :action GotoNextError<CR>   " for green wave underline
nmap zgH :action GotoPreviousError<CR>
nmap zf :action GotoDeclaration<CR>
imap zf <Esc>:action GotoDeclaration<CR>
nmap zgc zz:action CheckinProject<CR>

nmap zra :action BuildSolutionAction<CR>:action RiderUnitTestRunSolutionAction<CR>:action ReformatCode<CR>
imap zra <Esc>:action ReformatCode<CR>:action BuildSolutionAction<CR>:action RiderUnitTestRunSolutionAction<CR>
nmap zul :action RiderUnitTestRunSolutionAction<CR>
imap zul <Esc>:action RiderUnitTestRunSolutionAction<CR>
vmap zul <Esc>:action RiderUnitTestRunSolutionAction<CR>
map zrr :action RenameElement<CR>
imap zrr <Esc>:action RenameElement<CR>
map zri :action Inline<CR>
imap zri <Esc>:action Inline<CR>
map zrf :action IntroduceField<CR>
imap zrf <Esc>:action IntroduceField<CR>
map zrp :action IntroduceParameter<CR>
imap zrp <Esc>:action IntroduceParameter<CR>
map zrs :action ChangeSignature<CR>
imap zrs <Esc>:action ChangeSignature<CR>

"nmap zsp vi":<bs><bs><bs><bs><bs>action IntroduceParameter<CR>
nmap zsp va":'<,'>action IntroduceParameter<CR>

map zrv :action IntroduceVariable<CR>
vmap zrv <Esc>:action IntroduceVariable<CR>
imap zrv <Esc>:action IntroduceVariable<CR>
map zrm :action ExtractMethod<CR>
vmap zrm :'<,'>action ExtractMethod<CR>
vmap M :'<,'>:action ExtractMethod<CR>
map zrt :action SearchEverywhere<CR>
imap zrt <Esc>:action SearchEverywhere<CR>
map zro :action Move<CR>
imap zro <Esc>:action Move<CR>
map <C-D> :action EditorDuplicateLines<CR>
imap <C-D> <Esc>:action EditorDuplicateLines<CR>
map <C-A-K> :action MoveLineUp<CR>:action VimAutoIndentLines<CR>
imap <C-A-K> <Esc>:action MoveLineUp<CR>:action VimAutoIndentLines<CR>
map <C-A-J> :action MoveLineDown<CR>:action VimAutoIndentLines<CR>
imap <C-A-J> <Esc>:action MoveLineDown<CR>:action VimAutoIndentLines<CR>
map <A-D> :action EditorDeleteLine<CR>
imap <A-D> <Esc>:action EditorDeleteLine<CR>

nmap zm :action BuildSolutionAction<CR>
nmap <A-u> :redo<CR>

:nmap ,m :action FileStructurePopup<CR>

vmap zsr :action SurroundWithLiveTemplate<CR>
map zgt :action ReSharperNavigateTo<CR>

map zzz :action ShowIntentionActions<CR>
